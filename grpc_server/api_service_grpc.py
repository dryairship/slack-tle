# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: grpc_server/api_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import grpc_server.api_service_pb2


class APIServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetRating(self, stream: 'grpclib.server.Stream[grpc_server.api_service_pb2.RatingRequest, grpc_server.api_service_pb2.RatingReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/APIService/GetRating': grpclib.const.Handler(
                self.GetRating,
                grpclib.const.Cardinality.UNARY_UNARY,
                grpc_server.api_service_pb2.RatingRequest,
                grpc_server.api_service_pb2.RatingReply,
            ),
        }


class APIServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetRating = grpclib.client.UnaryUnaryMethod(
            channel,
            '/APIService/GetRating',
            grpc_server.api_service_pb2.RatingRequest,
            grpc_server.api_service_pb2.RatingReply,
        )
